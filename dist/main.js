(()=>{var n={426:(n,e,t)=>{"use strict";t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Oswald:wght@200;300;400;500;600;700&display=swap);"]),i.push([n.id,"* {\n    font-family: 'Oswald', sans-serif;\n    margin: 0;\n\tpadding: 0;\n\tfont-size: 100%;\n}\n\n:root {\n    --dark-color:#2C484E;\n    --light-color:#D7FEF2;\n    --accent-color:#4EA696;\n    --red-color:#92140C;\n    --green-color:#396204;\n}\n\n.main {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n    background-color: #162427;\n}\n\n.game-title {\n    font-size: 6rem;\n    color: var(--accent-color);\n    text-shadow: 3px 3px  var(--dark-color);\n}\n\n.main-buttons {\n    display: flex;\n    gap: 1rem;\n    position:absolute;\n    top: 10px;\n    right: 10px;\n}\n\n.main-buttons button {\n    padding: 16px;\n    background-color: transparent;\n    color: var(--light-color);\n    outline: none;\n    border: none;\n    transition: 0.4s;\n}\n\n.restart-main-button {\n    display: none;\n}\n\n.start-game {\n    padding: 16px;\n    background-color: transparent;\n    font-size: 2rem;\n    color: var(--light-color);\n    outline: none;\n    border: none;\n    transition: 0.4s;\n}\n\n.start-game:hover {\n    color: var(--accent-color);\n    cursor: pointer;\n}\n\n.main-buttons button:hover {\n    color: var(--accent-color);\n    cursor: pointer;\n}\n\n.game-display {\n    display: none;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.turn-display {\n    display: flex;\n    padding: 16px;\n    margin: 16px;\n\n}\n\n#turn {\n    font-size: 2em;\n    font-weight: 400;\n    color:var(--red-color);\n}\n\n.board:nth-child(2) .board-middle {\n    display: flex;\n    flex-direction: row-reverse;\n}\n\n.board-display {\n    display:flex;\n    gap: 32px;\n    \n}\n\n.board {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.board:nth-child(2) .hit-status {\n    margin-right: 30px;\n    margin-left: 0px;\n}\n.hit-status {\n    background-color: var(--accent-color);\n    color:#1624274d;\n    font-weight: 500;\n    padding: 2px 20px;\n    font-size: 28px;\n    border: 4px solid var(--dark-color);\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n    border-bottom: none;\n    width: 40px;\n    text-align: center;\n    margin-left: 30px;\n    margin-right: 0px;\n    line-height: 100%;\n    transition: 0.2s;\n}\n\n.active {\n    color: var(--red-color);\n}\n\n.board-middle {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n\n\n.player-name {\n    font-size: 28px;\n    color: var(--dark-color);\n    writing-mode: vertical-rl;\n    text-orientation: upright;\n    line-height: 80%;\n    letter-spacing: -12px;\n    padding: 6px;\n    padding-bottom: 26px;\n    background-color: var(--accent-color);\n    color: var(--light-color);\n    font-weight: 500;\n    border: 4px solid var(--dark-color);\n\n    \n}\n\n#player-one-name {\n    border-right: none;\n    border-bottom-left-radius: 8px;\n    border-top-left-radius: 8px;\n}\n\n#player-two-name {\n    border-left: none;\n    border-bottom-right-radius: 8px;\n    border-top-right-radius: 8px;\n}\n\n\n.gameboard {\n    display: grid;\n    border: 4px solid var(--dark-color);\n    grid-template-columns: repeat(10,1fr);\n    grid-template-rows: repeat(10,1fr);\n    background-color: var(--light-color);\n}\n\n.grid-item {\n    border: 1px solid var(--accent-color);\n    text-align: center;\n    padding: 1px;\n    width: 1.5em;\n    height: 1.5em;\n}\n\n.move-reminder {\n    padding: 28px;\n    font-size: 26px;\n    color: var(--dark-color);\n    font-weight: 300;\n}\n\n\n\n/* Start screen  */\n\n.start-screen {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 32px;\n}\n\n.ships-display {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    margin: 0px 16px;\n    \n\n}\n\n.ships-text {\n    color: var(--light-color);\n    font-size: 20px;\n    font-weight: 500;\n    text-align: center;\n    padding: 16px;\n}\n\n.ships {\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n}\n.ship {\n    display: flex;\n\n}\n\n.shipblock {\n    width: 25px;\n    height: 25px;\n    background-color: var(--dark-color);\n    border: var(--accent-color) 1px solid;\n}\n\n.occupied {\n    background-color: var(--dark-color);\n}\n\n.hit {\n    background-color: var(--green-color);\n}\n\n.missed {\n    background-color: var(--red-color);\n}\n\n.game-options-display {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 32px;\n    font-size: 26px;\n    font-weight: 500;\n    color: var(--light-color);\n\n}\n\n.random-ships, .reset-ships, .start-game {\n    transition: 0.4s;\n}\n\n.random-ships:hover, .reset-ships:hover {\n    color: var(--accent-color);\n    cursor: pointer;\n}\n\n\n\n\n\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Oswald:wght@200;300;400;500;600;700&display=swap');\n\n* {\n    font-family: 'Oswald', sans-serif;\n    margin: 0;\n\tpadding: 0;\n\tfont-size: 100%;\n}\n\n:root {\n    --dark-color:#2C484E;\n    --light-color:#D7FEF2;\n    --accent-color:#4EA696;\n    --red-color:#92140C;\n    --green-color:#396204;\n}\n\n.main {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n    background-color: #162427;\n}\n\n.game-title {\n    font-size: 6rem;\n    color: var(--accent-color);\n    text-shadow: 3px 3px  var(--dark-color);\n}\n\n.main-buttons {\n    display: flex;\n    gap: 1rem;\n    position:absolute;\n    top: 10px;\n    right: 10px;\n}\n\n.main-buttons button {\n    padding: 16px;\n    background-color: transparent;\n    color: var(--light-color);\n    outline: none;\n    border: none;\n    transition: 0.4s;\n}\n\n.restart-main-button {\n    display: none;\n}\n\n.start-game {\n    padding: 16px;\n    background-color: transparent;\n    font-size: 2rem;\n    color: var(--light-color);\n    outline: none;\n    border: none;\n    transition: 0.4s;\n}\n\n.start-game:hover {\n    color: var(--accent-color);\n    cursor: pointer;\n}\n\n.main-buttons button:hover {\n    color: var(--accent-color);\n    cursor: pointer;\n}\n\n.game-display {\n    display: none;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.turn-display {\n    display: flex;\n    padding: 16px;\n    margin: 16px;\n\n}\n\n#turn {\n    font-size: 2em;\n    font-weight: 400;\n    color:var(--red-color);\n}\n\n.board:nth-child(2) .board-middle {\n    display: flex;\n    flex-direction: row-reverse;\n}\n\n.board-display {\n    display:flex;\n    gap: 32px;\n    \n}\n\n.board {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.board:nth-child(2) .hit-status {\n    margin-right: 30px;\n    margin-left: 0px;\n}\n.hit-status {\n    background-color: var(--accent-color);\n    color:#1624274d;\n    font-weight: 500;\n    padding: 2px 20px;\n    font-size: 28px;\n    border: 4px solid var(--dark-color);\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n    border-bottom: none;\n    width: 40px;\n    text-align: center;\n    margin-left: 30px;\n    margin-right: 0px;\n    line-height: 100%;\n    transition: 0.2s;\n}\n\n.active {\n    color: var(--red-color);\n}\n\n.board-middle {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n\n\n.player-name {\n    font-size: 28px;\n    color: var(--dark-color);\n    writing-mode: vertical-rl;\n    text-orientation: upright;\n    line-height: 80%;\n    letter-spacing: -12px;\n    padding: 6px;\n    padding-bottom: 26px;\n    background-color: var(--accent-color);\n    color: var(--light-color);\n    font-weight: 500;\n    border: 4px solid var(--dark-color);\n\n    \n}\n\n#player-one-name {\n    border-right: none;\n    border-bottom-left-radius: 8px;\n    border-top-left-radius: 8px;\n}\n\n#player-two-name {\n    border-left: none;\n    border-bottom-right-radius: 8px;\n    border-top-right-radius: 8px;\n}\n\n\n.gameboard {\n    display: grid;\n    border: 4px solid var(--dark-color);\n    grid-template-columns: repeat(10,1fr);\n    grid-template-rows: repeat(10,1fr);\n    background-color: var(--light-color);\n}\n\n.grid-item {\n    border: 1px solid var(--accent-color);\n    text-align: center;\n    padding: 1px;\n    width: 1.5em;\n    height: 1.5em;\n}\n\n.move-reminder {\n    padding: 28px;\n    font-size: 26px;\n    color: var(--dark-color);\n    font-weight: 300;\n}\n\n\n\n/* Start screen  */\n\n.start-screen {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 32px;\n}\n\n.ships-display {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    margin: 0px 16px;\n    \n\n}\n\n.ships-text {\n    color: var(--light-color);\n    font-size: 20px;\n    font-weight: 500;\n    text-align: center;\n    padding: 16px;\n}\n\n.ships {\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n}\n.ship {\n    display: flex;\n\n}\n\n.shipblock {\n    width: 25px;\n    height: 25px;\n    background-color: var(--dark-color);\n    border: var(--accent-color) 1px solid;\n}\n\n.occupied {\n    background-color: var(--dark-color);\n}\n\n.hit {\n    background-color: var(--green-color);\n}\n\n.missed {\n    background-color: var(--red-color);\n}\n\n.game-options-display {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 32px;\n    font-size: 26px;\n    font-weight: 500;\n    color: var(--light-color);\n\n}\n\n.random-ships, .reset-ships, .start-game {\n    transition: 0.4s;\n}\n\n.random-ships:hover, .reset-ships:hover {\n    color: var(--accent-color);\n    cursor: pointer;\n}\n\n\n\n\n\n\n"],sourceRoot:""}]);const A=i},645:n=>{"use strict";n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{"use strict";n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{"use strict";var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],A=0;A<n.length;A++){var s=n[A],c=r.base?s[0]+r.base:s[0],l=a[c]||0,d="".concat(c," ").concat(l);a[c]=l+1;var p=t(d),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var h=o(u,r);r.byIndex=A,e.splice(A,0,{identifier:d,updater:h,references:1})}i.push(d)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var s=r(n,o),c=0;c<a.length;c++){var l=t(a[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=s}}},569:n=>{"use strict";var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{"use strict";n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{"use strict";n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{"use strict";n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{"use strict";n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},574:(n,e,t)=>{const r=t(753);n.exports=class extends r{constructor(n,e,t){super(n,t),this.turn=!1,this.enemy=e,this.enemyBoard=t,this.attackArray=[]}aiAttack(){if(1==this.checkTurn()){let n={x:void 0,y:void 0};for(;;){let e=Math.floor(10*Math.random()),t=Math.floor(10*Math.random());if(n.x=e,n.y=t,!this.attackArray.some((e=>e.x==n.x&&e.y==n.y))){this.attackArray.push(n),this.playerAttack(n.x,n.y,this.enemy,this.enemyBoard);break}}}}getAttackArr(){return this.attackArray}}},974:n=>{n.exports=class{constructor(){this.gameboardArray=this.createGameboard(),this.missedAttacks=[]}createGameboard(){let n=[],e=[];for(let t=0;t<10;t++){for(let n=0;n<10;n++)e.push({shipName:void 0,shipPosition:void 0});n.push(e),e=[]}return n}getGameboard(){return this.gameboardArray}validateShipPlacement(n,e,t){if(e>10||e<0||t>10||t<0||t+n>10)return!1;for(let r=t;r<t+n;r++)if(null!=this.gameboardArray[e][r].shipName)return!1;return!0}placeShip(n,e,t){if(this.validateShipPlacement(n.getShipLength(),e,t))for(let r=0;r<n.getShipLength();r++)this.gameboardArray[e][t+r].shipName=n,this.gameboardArray[e][t+r].shipPosition=r}receiveAttack(n,e){null==this.gameboardArray[e][n].shipName?this.missedAttacks.push({x:n,y:e}):this.gameboardArray[e][n].shipName.hit(this.gameboardArray[e][n].shipPosition)}missedAttackArr(){return this.missedAttacks}allShipsSunk(){let n=!0;return this.gameboardArray.forEach((e=>{e.forEach((e=>{e.shipName&&0==e.shipName.checkSunk()&&(n=!1)}))})),n}}},753:n=>{n.exports=class{constructor(n){this.name=n,this.turn=!0}setName(n){this.name=n}getName(){return this.name}changeTurn(n){1==this.turn&&(this.turn=!1,n.startTurn())}startTurn(){0==this.turn&&(this.turn=!0)}checkTurn(){return this.turn}playerAttack(n,e,t,r){1==this.checkTurn()&&(r.receiveAttack(n,e),this.changeTurn(t))}}},484:n=>{n.exports=class{constructor(n){this.length=n,this.ship=this.createShip()}createShip(){let n=[],e=this.length;for(;e>0;)n.push({hit:!1}),e--;return n}getShip(){return this.ship}getShipLength(){return this.ship.length}hit(n){this.ship[n].hit=!0}checkHit(n){return 0!=n.hit&&(1==n.hit||void 0)}checkSunk(){return!!this.ship.every(this.checkHit)}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{"use strict";var n=t(379),e=t.n(n),r=t(795),o=t.n(r),a=t(569),i=t.n(a),A=t(565),s=t.n(A),c=t(216),l=t.n(c),d=t(589),p=t.n(d),u=t(426),h={};h.styleTagTransform=p(),h.setAttributes=s(),h.insert=i().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=l(),e()(u.Z,h),u.Z&&u.Z.locals&&u.Z.locals;const g=t(484),m=t(753),C=t(574),B=t(974);console.log("hell it works");const f=document.querySelector("#battleship"),I=document.querySelector("#carrier"),y=document.querySelector("#submarine"),x=document.querySelector("#destroyer"),b=document.querySelector("#patrolboat"),v=document.querySelector(".start-display"),k=document.querySelector(".game-display"),S=document.querySelector(".ships"),E=document.querySelector(".random-ships"),w=document.querySelector(".reset-ships"),q=document.querySelector(".restart-main-button"),j=(document.querySelector(".help-main-button"),document.querySelector(".tag-main-button"),document.getElementById("player-one-set-board")),z=document.getElementById("player-one-board"),L=document.getElementById("ai-board"),T=new B,N=new B,M=new m("Marta"),Y=new C("Ai",M,T),P=new g(4),Z=new g(5),$=new g(3),H=new g(3),O=new g(2),G=new g(4),R=new g(5),D=new g(3),U=new g(3),F=new g(2);function W(n){for(let e=0;e<10;e++)for(let t=0;t<10;t++){let r=document.createElement("div");r.className="grid-item",r.setAttribute("data-x",t),r.setAttribute("data-y",e),"player-one-set-board"==n.id?(r.addEventListener("dragover",(n=>{n.preventDefault()})),r.addEventListener("drop",(n=>{n.preventDefault(),J(n)})),r.addEventListener("click",(()=>{console.log(r)}))):"ai-board"==n.id&&r.addEventListener("click",(n=>{V(n.target)})),n.appendChild(r)}}function X(n,e){for(;;){let t=[];if(t=[Math.floor(10*Math.random()),Math.floor(10*Math.random())],e.validateShipPlacement(n.getShipLength(),t[0],t[1])){e.placeShip(n,t[0],t[1]);break}}}function J(n){let e,t=n.dataTransfer.getData("text"),r=parseInt(n.target.getAttribute("data-x")),o=parseInt(n.target.getAttribute("data-y")),a=n.target.className;console.log(n),"battleship"==t?e=P:"carrier"==t?e=Z:"submarine"==t?e=$:"destroyer"==t?e=H:"patrolboat"==t&&(e=O);for(let n=r;n<r+e.getShipLength();n++)if("grid-item occupied"==a)return!1;if(1==T.validateShipPlacement(e.getShipLength(),o,r)){T.placeShip(e,o,r),console.log(S.childNodes.length),K("player-one-set-board",T);let n=document.querySelector(`#${t}`);S.removeChild(n),0==S.childNodes.length&&en()}}function _(n){n.addEventListener("dragstart",(n=>{n.dataTransfer.setData("text/plain",n.target.id),console.log(n.target.id)}))}function V(n){let e=n.getAttribute("data-x"),t=n.getAttribute("data-y");M.playerAttack(e,t,Y,N),K("ai-board",N),N.allShipsSunk()&&Q(M.getName()),Y.aiAttack(),K("player-one-board",T),T.allShipsSunk()&&Q(Y)}function K(n,e){let t=e.getGameboard(),r=e.missedAttackArr();t.forEach(((e,t)=>{e.forEach(((e,r)=>{if(e.shipName)if(1==e.shipName.checkHit(e.shipName.getShip()[e.shipPosition])){let e=document.querySelector(`#${n} [data-x="${r}"][data-y="${t}"]`);e.textContent="X",e.classList.add("hit"),e.classList.remove("occupied")}else 0!=e.shipName.checkHit(e.shipName.getShip()[e.shipPosition])||"player-one-set-board"!=n&&"player-one-board"!=n&&"ai-board"!=n||document.querySelector(`#${n} [data-x="${r}"][data-y="${t}"]`).classList.add("occupied")}))})),r.forEach((e=>{let t=document.querySelector(`#${n} [data-x="${e.x}"][data-y="${e.y}"]`);t.classList.add("missed"),t.textContent="X"}))}function Q(n){console.log(`${n} wins!`)}function nn(){S.innerHTML="",T.gameboardArray=void 0,T.missedAttacks=[],T.gameboardArray=T.createGameboard(),j.innerHTML="",W(j),K("player-one-set-board",T)}function en(){document.querySelector(".ships-text").innerHTML='<div class="start-game">START</div>',document.querySelector(".start-game").addEventListener("click",(()=>{v.style.display="none",k.style.display="flex",q.style.display="flex",W(z),K("player-one-board",T),W(L)}))}E.addEventListener("click",(()=>{nn(),X(P,T),X(Z,T),X($,T),X(H,T),X(O,T),K("player-one-set-board",T),en()})),w.addEventListener("click",(()=>{nn(),window.location.reload()})),W(j),_(f),_(I),_(y),_(x),_(b),X(G,N),X(R,N),X(D,N),X(U,N),X(F,N)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,